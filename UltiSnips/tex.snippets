global !p
# import sys
# sys.stdout = open("/home/zdikov/output.txt", "a")
def math():
    synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
    # print(synstackids)
    try:
        first = next(i for i in reversed(synstackids) if i in ['414', '413',
        '411', '559', '560', '557', '692', '693', '690'])
        return True
    except StopIteration:
        return False
endglobal

snippet template "Basic template" b
\documentclass[a4paper,12pt]{article} % добавить leqno в [] для нумерации слева

\usepackage{cmap}                   % поиск в PDF
\usepackage{mathtext}               % русские буквы в формулах
\usepackage[T2A]{fontenc}           % кодировка
\usepackage[utf8]{inputenc}         % кодировка исходного текста
\usepackage[english,russian]{babel} % локализация и переносы
\usepackage{enumitem}  % кастомная нумерация для enumerate

\usepackage{amsmath,amsfonts,amssymb,amsthm,mathtools} % AMS

% Показывать номера только у тех формул, на которые есть \eqref{} в тексте.
\mathtoolsset{showonlyrefs=true}

% Шрифты
\usepackage{euscript}
\usepackage{mathrsfs}

% cite, href, thebibliography
\usepackage[colorlinks,citecolor=blue,linkcolor=blue,bookmarks=false,hypertexnames=true, urlcolor=blue]{hyperref} 

% Custom operators
\DeclareMathOperator{\sgn}{sgn}
\DeclareMathOperator{\divisible}{\raisebox{-2pt}{\vdots}}
\DeclareMathOperator{\dom}{dom}
\DeclareMathOperator{\rng}{rng}
\DeclareMathOperator{\e}{\mathbb{E}}
\DeclareMathOperator{\disp}{\mathbb{D}}
\DeclareMathOperator{\cov}{\mathrm{cov}}

% Skip enumeration items
\makeatletter
\newcommand{\skipitems}[1]{%
  \addtocounter{\@enumctr}{#1}%
}
\makeatother

\renewcommand{\thesubsection}{\alph{subsection})}
\renewcommand{\thesection}{\arabic{section})}

\pdfsuppresswarningpagegroup=1

\usepackage{graphicx}
\graphicspath{{pictures/}}
\DeclareGraphicsExtensions{.pdf,.png,.jpg}

\author{$1}
\title{$2}
\date{}

\begin{document}
\maketitle
    $0
\end{document}
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
    ${2:${VISUAL}}
\\end{$1}
endsnippet

snippet para "paragraph" bA
\paragraph{$1}
$0
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
    \centering
    \caption{${2:caption}}
    \label{tab:${3:label}}
    \begin{tabular}{${5:c}}
    $0${5/((?<=.)c|l|r)|./(?1: & )/g}
    \end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
    \centering
    ${2:\includegraphics[width=0.8\textwidth]{$3}}
    \caption{${4:$3}}
    \label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
    \item $0
\end{enumerate}
endsnippet

snippet itemize "Itemize" bA
\begin{itemize}
    \item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
    \item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet im "Math" wA
$${1:${VISUAL}}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet setb "Bold" wA
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet seti "Italic" wA
\textit{${1:${VISUAL}}}$0
endsnippet

snippet setn "Normal" wA
\textnormal{${1:${VISUAL}}}$0
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
\]
endsnippet

snippet ali "Align" bA
\begin{align}
    ${1:${VISUAL}}
\end{align}
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
    if stripped[i] == ')': depth += 1
    if stripped[i] == '(': depth -= 1
    if depth == 0: break;
    i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet


context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code',
code]).decode()[:-1]
`
endsnippet

context "math()"
snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "equals" iA
\neq
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix}
    ${1:${VISUAL}}
\end{pmatrix}
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix}
    ${1:${VISUAL}}
\end{bmatrix}
endsnippet

snippet vmat "vmat" iA
\begin{vmatrix}
    ${1:${VISUAL}}
\end{vmatrix}
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right)$0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right)$0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right)$0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right|$0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right]$0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet con "conjugate" iA
^*
endsnippet

context "math()"
snippet tra "transpose" iA
^\top
endsnippet

snippet sum "sum" w
\sum_{${1:i=1}}^{${2:n}} $3
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} $0
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} $0
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:f}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet <= "leq" iA
\leq
endsnippet

snippet >= "geq" iA
\geq
endsnippet

context "math()"
snippet EE "exists" iA
\exists
endsnippet

context "math()"
snippet AA "forall" iA
\forall
endsnippet

# context "math()"
# snippet xnn "xn" iA
# x_{n}
# endsnippet

# context "math()"
# snippet ynn "yn" iA
# y_{n}
# endsnippet


# context "math()"
# snippet xii "xi" iA
# x_{i}
# endsnippet

# context "math()"
# snippet yii "yi" iA
# y_{i}
# endsnippet

# context "math()"
# snippet xjj "xj" iA
# x_{j}
# endsnippet

# context "math()"
# snippet yjj "yj" iA
# y_{j}
# endsnippet

# context "math()"
# snippet xp1 "x" iA
# x_{n+1}
# endsnippet

# context "math()"
# snippet xmm "x" iA
# x_{m}
# endsnippet

# snippet plot "Plot" w
# \begin{figure}[$1]
#     \centering
#     \begin{tikzpicture}
#         \begin{axis}[
#             xmin= ${2:-10}, xmax= ${3:10},
#             ymin= ${4:-10}, ymax = ${5:10},
#             axis lines = middle,
#         ]
#             \addplot[domain=$2:$3, samples=${6:100}]{$7};
#         \end{axis}
#     \end{tikzpicture}
#     \caption{$8}
#     \label{${9:$8}}
# \end{figure}
# endsnippet

# snippet nn "Tikz node" w
# \node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
# $0
# endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet mrm "mathrm" iA
\mathrm{${1:${VISUAL}}}$0
endsnippet

# snippet lll "l" iA
# \ell
# endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla
endsnippet

context "math()"
snippet xxx "cross" iA
\times
endsnippet

context "math()"
snippet oxx "Kronecker product" iA
\otimes
endsnippet

priority 100
snippet ** "cdot" iA
\cdot
endsnippet

context "math()"
snippet norm "norm" iA
\|${1:${VISUAL}}\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp|alpha|theta)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:+\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int|sigma|Sigma|min|max)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet RA "Right arrow" iA
\Rightarrow
endsnippet

context "math()"
snippet LA "Leftright arrow" iA
\Leftrightarrow
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto
endsnippet

context "math()"
snippet inv "inverse" iA
^{-1}
endsnippet

# context "math()"
# snippet compl "complement" iA
# ^{c}
# endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

context "math()"
snippet >> ">>" iA
\gg
endsnippet

context "math()"
snippet << "<<" iA
\ll
endsnippet


context "math()"
snippet ~~ "~" iA
\sim
endsnippet

context "math()"
snippet :: ":" iA
\colon
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\}$0
endsnippet

context "math()"
snippet || "mid" iA
\mid
endsnippet

context "math()"
snippet ccc "subseteq" Ai
\subseteq
endsnippet

context "math()"
snippet notin "not in " iA
\notin
endsnippet

context "math()"
snippet inn "in " iA
\in
endsnippet

context "math()"
snippet NN "n" iA
\mathbb{N}
endsnippet

context "math()"
snippet Nn "cap" iA
\cap
endsnippet

context "math()"
snippet UU "cup" iA
\cup
endsnippet

context "math()"
snippet uuu "bigcup" iA
\bigcup_{${1:n = 1}}^{${2: \infty}} $0
endsnippet

context "math()"
snippet nnn "bigcap" iA
\bigcap_{${1:n = 1}}^{${2: \infty}} $0
endsnippet

context "math()"
snippet OO "emptyset" iA
\varnothing
endsnippet

# snippet <! "normal" iA
# \triangleleft
# endsnippet

# snippet <> "hokje" iA
# \diamond
# endsnippet

# context "math()"
# snippet '(?<!i)sts' "text subscript" irA
# _\text{$1} $0
# endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
    $1
\end{cases}
endsnippet

context "math()"
snippet lead "leadsto" iA
\leadsto
endsnippet

context "math()"
snippet pr "Prob" iA
\Pr
endsnippet

# snippet bigfun "Big function" iA
# \begin{align*}
#     $1: $2 &\longrightarrow $3 \\\\
#     $4 &\longmapsto $1($4) = $0
# .\end{align*}
# endsnippet

snippet cvec "column vector" iA
\begin{bmatrix}
    ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n}
\end{bmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{${1:${VISUAL}}}$0
endsnippet


context "math()"
snippet ovv "large vector" iA
\overrightarrow{${1:${VISUAL}}}$0
endsnippet


priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{${1:${VISUAL}}}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet phi "phi" wiA
\varphi
endsnippet

context "math()"
snippet eps "epsilon" wiA
\varepsilon
endsnippet

context "math()"
snippet lam "lambda" wiA
\lambda
endsnippet

context "math()"
snippet Lam "Lambda" wiA
\Lambda
endsnippet

context "math()"
snippet CC "C" iA
\mathbb{C}
endsnippet

context "math()"
snippet RR "R" iA
\mathbb{R}
endsnippet

context "math()"
snippet QQ "Q" iA
\mathbb{Q}
endsnippet

snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

snippet biblio "thebibliography" bA
\begin{thebibliography}{0}
	\bibitem{$1}\hypertarget{$1}{}
	\href{$2}
	{$3}
\end{thebibliography}
endsnippet


# context "math()"
# snippet DD "D" iA
# \mathbb{D}
# endsnippet


# context "math()"
# snippet EE "E" iA
# \mathbb{E}
# endsnippet

# context "math()"
# snippet HH "H" iA
# \mathbb{H}
# endsnippet

# vim:ft=snippets


